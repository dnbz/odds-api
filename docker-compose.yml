version: "3"
volumes:
  redis_data:
  postgres_data:

services:
  redis:
    container_name: oddsapi_redis
    image: redis:7-alpine
    command: >
      --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_data:/data
    environment:
      TZ: Europe/Moscow
    networks:
      - oddsapi

  postgres:
    container_name: oddsapi_postgres
    working_dir: /dumps
    image: postgres:15-alpine
    environment:
      TZ: Europe/Moscow
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: oddsapi
    volumes:
      - postgres_data:/var/lib/postgresql
      - ./docker/dumps:/dumps
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - oddsapi

  queue-worker:
    container_name: oddsapi_worker
    build: ./
    env_file: .env.prod
    entrypoint: ./entrypoint-worker.sh
    environment:
      TZ: Europe/Moscow
    networks:
      - oddsapi

  tgbot:
    container_name: oddsapi_tgbot
    build: ./
    env_file: .env.prod
    entrypoint: ./entrypoint-tgbot.sh
    environment:
      TZ: Europe/Moscow
    networks:
      - oddsapi


  betcity-listener:
    container_name: oddsapi_betcity_listener
    build: ./
    env_file: .env.prod
    entrypoint: ./entrypoint-betcity-listener.sh
    environment:
      TZ: Europe/Moscow
    networks:
      - oddsapi

  fonbet-listener:
    container_name: oddsapi_fonbet_listener
    build: ./
    env_file: .env.prod
    entrypoint: ./entrypoint-fonbet-listener.sh
    environment:
      TZ: Europe/Moscow
    networks:
      - oddsapi

networks:
  oddsapi:
    external: true
    driver: bridge
